{"ast":null,"code":"var _jsxFileName = \"/Users/eunji/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u11B8\\u110F\\u1173\\u1100\\u1175\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/simplediary/src/App.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\n\n// const dummyList = [\n//   {\n//     id: 1,\n//     author: \"이정환\",\n//     content: \"하이 1\",\n//     emotion: 5,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 2,\n//     author: \"홍길동\",\n//     content: \"하이 2\",\n//     emotion: 3,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 3,\n//     author: \"아무개\",\n//     content: \"하이 3\",\n//     emotion: 1,\n//     created_date: new Date().getTime(),\n//   },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //전역적으로 data를 관리할 state\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  //일기 데이터를 추가할 수 있는 함수\n  //data를 업데이트 시키는 로직인 setData를 작성\n  //다이어리 에디터 안에 있는 값들을 모르기 때문에 파라미터로 받아옴\n  const onCreate = (author, content, emotion) => {\n    const test = new Date();\n    const created_date = new Date().getTime;\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","DiaryEditor","DiaryList","jsxDEV","_jsxDEV","App","_s","data","setData","dataId","onCreate","author","content","emotion","test","Date","created_date","getTime","newItem","id","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","diaryList","_c","$RefreshReg$"],"sources":["/Users/eunji/한입크기리액트/simplediary/src/App.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\n\n// const dummyList = [\n//   {\n//     id: 1,\n//     author: \"이정환\",\n//     content: \"하이 1\",\n//     emotion: 5,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 2,\n//     author: \"홍길동\",\n//     content: \"하이 2\",\n//     emotion: 3,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 3,\n//     author: \"아무개\",\n//     content: \"하이 3\",\n//     emotion: 1,\n//     created_date: new Date().getTime(),\n//   },\n// ];\n\nfunction App() {\n  //전역적으로 data를 관리할 state\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  //일기 데이터를 추가할 수 있는 함수\n  //data를 업데이트 시키는 로직인 setData를 작성\n  //다이어리 에디터 안에 있는 값들을 모르기 때문에 파라미터로 받아옴\n  const onCreate = (author, content, emotion) => {\n    const test = new Date();\n    const created_date = new Date().getTime;\n\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,MAAM,GAAGV,MAAM,CAAC,CAAC,CAAC;;EAExB;EACA;EACA;EACA,MAAMW,QAAQ,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,KAAK;IAC7C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvB,MAAMC,YAAY,GAAG,IAAID,IAAI,CAAC,CAAC,CAACE,OAAO;IAEvC,MAAMC,OAAO,GAAG;MACdP,MAAM;MACNC,OAAO;MACPC,OAAO;MACPG,YAAY;MACZG,EAAE,EAAEV,MAAM,CAACW;IACb,CAAC;IACDX,MAAM,CAACW,OAAO,IAAI,CAAC;IACnBZ,OAAO,CAAC,CAACU,OAAO,EAAE,GAAGX,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEH,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACH,WAAW;MAACS,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCtB,OAAA,CAACF,SAAS;MAACyB,SAAS,EAAEpB;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACpB,EAAA,CA9BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}