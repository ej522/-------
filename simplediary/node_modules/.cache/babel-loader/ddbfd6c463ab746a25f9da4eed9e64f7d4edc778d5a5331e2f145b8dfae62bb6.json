{"ast":null,"code":"var _jsxFileName = \"/Users/eunji/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u11B8\\u110F\\u1173\\u1100\\u1175\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/simplediary/src/LifeCycle.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n//컴포넌트1\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnmountTest = () => {\n  _s();\n  useEffect(() => {\n    console.log(\"mount\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Unmount Testing Compnent\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n//컴포넌트2\n_s(UnmountTest, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = UnmountTest;\nconst LifeCycle = () => {\n  _s2();\n  const [isVisible, setIsVisible] = useState(false);\n  const toggle = () => setIsVisible(!isVisible);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"ON/OFF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(UnmountTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s2(LifeCycle, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n_c2 = LifeCycle;\nexport default LifeCycle;\n\n//한 파일에 컴포넌트를 여러개 만들어도 됨, 가독성 때문에 한 파일에 하나의 컴포넌트를 만든 것\nvar _c, _c2;\n$RefreshReg$(_c, \"UnmountTest\");\n$RefreshReg$(_c2, \"LifeCycle\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UnmountTest","_s","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","LifeCycle","_s2","isVisible","setIsVisible","toggle","style","padding","onClick","_c2","$RefreshReg$"],"sources":["/Users/eunji/한입크기리액트/simplediary/src/LifeCycle.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n//컴포넌트1\nconst UnmountTest = () => {\n  useEffect(() => {\n    console.log(\"mount\");\n  }, []);\n  return <div>Unmount Testing Compnent</div>;\n};\n\n//컴포넌트2\nconst LifeCycle = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const toggle = () => setIsVisible(!isVisible);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <button onClick={toggle}>ON/OFF</button>\n      {isVisible && <UnmountTest />}\n      {/* isVisible이 ture일 때만 amount 테스트 컴포넌트가 렌더링 됨, 단락회로평가를 이용하면 값에 따라 뒤에 있는 컴포넌트를 렌더할지 말지 아주 쉽게 결정할 수 있음*/}\n    </div>\n  );\n};\n\nexport default LifeCycle;\n\n//한 파일에 컴포넌트를 여러개 만들어도 됨, 가독성 때문에 한 파일에 하나의 컴포넌트를 만든 것\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxBL,SAAS,CAAC,MAAM;IACdM,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOJ,OAAA;IAAAK,QAAA,EAAK;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC5C,CAAC;;AAED;AAAAP,EAAA,CAPMD,WAAW;AAAAS,EAAA,GAAXT,WAAW;AAQjB,MAAMU,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMiB,MAAM,GAAGA,CAAA,KAAMD,YAAY,CAAC,CAACD,SAAS,CAAC;EAE7C,oBACEb,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAZ,QAAA,gBAC1BL,OAAA;MAAQkB,OAAO,EAAEH,MAAO;MAAAV,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvCI,SAAS,iBAAIb,OAAA,CAACC,WAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEV,CAAC;AAACG,GAAA,CAXID,SAAS;AAAAQ,GAAA,GAATR,SAAS;AAaf,eAAeA,SAAS;;AAExB;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}