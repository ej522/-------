{"ast":null,"code":"var _jsxFileName = \"/Users/eunji/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u11B8\\u110F\\u1173\\u1100\\u1175\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/simplediary/src/LifeCycle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LifeCycle = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Mount!\");\n  }, []); //빈배열을 주면 mount된 시점에만 움직임, mount 시점에 무언가 하고 싶으면 빈배열을 넘겨주고 콜백함수에 하고 싶은 일을 넣어주면 됨\n\n  useEffect(() => {\n    console.log(\"Update!\"); //dependencyArray를 전달하지 않으면 됨\n  });\n  useEffect(() => {\n    console.log(`count is update : ${count} `);\n    if (count > 5) {\n      alert(\"count가 5를 넘었습니다. 따라서 1로 초기화 합니다\");\n      setCount(1);\n    }\n  }, [count]);\n  useEffect(() => {\n    console.log(`text is update : ${text} `);\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(count + 1);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LifeCycle, \"Egij4oTpe9vtrRbQf7wxLAAvPPM=\");\n_c = LifeCycle;\nexport default LifeCycle;\nvar _c;\n$RefreshReg$(_c, \"LifeCycle\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LifeCycle","_s","count","setCount","text","setText","console","log","alert","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/eunji/한입크기리액트/simplediary/src/LifeCycle.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst LifeCycle = () => {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"Mount!\");\n  }, []); //빈배열을 주면 mount된 시점에만 움직임, mount 시점에 무언가 하고 싶으면 빈배열을 넘겨주고 콜백함수에 하고 싶은 일을 넣어주면 됨\n\n  useEffect(() => {\n    console.log(\"Update!\"); //dependencyArray를 전달하지 않으면 됨\n  });\n\n  useEffect(() => {\n    console.log(`count is update : ${count} `);\n    if (count > 5) {\n      alert(\"count가 5를 넘었습니다. 따라서 1로 초기화 합니다\");\n      setCount(1);\n    }\n  }, [count]);\n\n  useEffect(() => {\n    console.log(`text is update : ${text} `);\n  }, [text]);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <div>\n        {count}\n        <button\n          onClick={() => {\n            setCount(count + 1);\n          }}\n        >\n          +\n        </button>\n        <div>\n          <input\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n          ></input>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LifeCycle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERX,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAE,qBAAoBL,KAAM,GAAE,CAAC;IAC1C,IAAIA,KAAK,GAAG,CAAC,EAAE;MACbM,KAAK,CAAC,iCAAiC,CAAC;MACxCL,QAAQ,CAAC,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEXN,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAE,oBAAmBH,IAAK,GAAE,CAAC;EAC1C,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,eAC1BZ,OAAA;MAAAY,QAAA,GACGT,KAAK,eACNH,OAAA;QACEa,OAAO,EAAEA,CAAA,KAAM;UACbT,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;QACrB,CAAE;QAAAS,QAAA,EACH;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjB,OAAA;QAAAY,QAAA,eACEZ,OAAA;UACEkB,KAAK,EAAEb,IAAK;UACZc,QAAQ,EAAGC,CAAC,IAAK;YACfd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UACzB;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA9CID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}