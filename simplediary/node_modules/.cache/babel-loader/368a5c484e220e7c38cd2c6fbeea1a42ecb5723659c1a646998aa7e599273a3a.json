{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n\n// //컴포넌트1\n// const UnmountTest = () => {\n//   useEffect(() => {\n//     console.log(\"Mount!\");\n\n//     return () => {\n//       //unmount 시점에 실행됨\n//       console.log(\"Unmount!\");\n//     };\n//   }, []);\n//   return <div>Unmount Testing Compnent</div>;\n// };\n\n// //컴포넌트2\n// const LifeCycle = () => {\n//   const [isVisible, setIsVisible] = useState(false);\n//   const toggle = () => setIsVisible(!isVisible);\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <button onClick={toggle}>ON/OFF</button>\n//       {isVisible && <UnmountTest />}\n//       {/* isVisible이 ture일 때만 amount 테스트 컴포넌트가 렌더링 됨, 단락회로평가를 이용하면 값에 따라 뒤에 있는 컴포넌트를 렌더할지 말지 아주 쉽게 결정할 수 있음*/}\n//     </div>\n//   );\n// };\n\n// export default LifeCycle;\n\n// //한 파일에 컴포넌트를 여러개 만들어도 됨, 가독성 때문에 한 파일에 하나의 컴포넌트를 만든 것","map":{"version":3,"names":[],"sources":["/Users/eunji/한입크기리액트/simplediary/src/LifeCycle.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n\n// //컴포넌트1\n// const UnmountTest = () => {\n//   useEffect(() => {\n//     console.log(\"Mount!\");\n\n//     return () => {\n//       //unmount 시점에 실행됨\n//       console.log(\"Unmount!\");\n//     };\n//   }, []);\n//   return <div>Unmount Testing Compnent</div>;\n// };\n\n// //컴포넌트2\n// const LifeCycle = () => {\n//   const [isVisible, setIsVisible] = useState(false);\n//   const toggle = () => setIsVisible(!isVisible);\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <button onClick={toggle}>ON/OFF</button>\n//       {isVisible && <UnmountTest />}\n//       {/* isVisible이 ture일 때만 amount 테스트 컴포넌트가 렌더링 됨, 단락회로평가를 이용하면 값에 따라 뒤에 있는 컴포넌트를 렌더할지 말지 아주 쉽게 결정할 수 있음*/}\n//     </div>\n//   );\n// };\n\n// export default LifeCycle;\n\n// //한 파일에 컴포넌트를 여러개 만들어도 됨, 가독성 때문에 한 파일에 하나의 컴포넌트를 만든 것\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}